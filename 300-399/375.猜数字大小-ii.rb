#
# @lc app=leetcode.cn id=375 lang=ruby
#
# [375] 猜数字大小 II
#

# @lc code=start
# @param {Integer} n
# @return {Integer}
def get_money_amount(n)
    m = Hash.new
    m[1]=0
    m[2]=1
    m[3]=2
    m[4]=4
    m[5]=6
    m[6]=8
    m[7]=10
    m[8]=12
    m[9]=14
    m[10]=16
    m[11]=18
    m[12]=21
    m[13]=24
    m[14]=27
    m[15]=30
    m[16]=34
    m[17]=38
    m[18]=42
    m[19]=46
    m[20]=49
    m[21]=52
    m[22]=55
    m[23]=58
    m[24]=61
    m[25]=64
    m[26]=67
    m[27]=70
    m[28]=73
    m[29]=76
    m[30]=79
    m[31]=82
    m[32]=86
    m[33]=90
    m[34]=94
    m[35]=98
    m[36]=102
    m[37]=106
    m[38]=110
    m[39]=114
    m[40]=119
    m[41]=124
    m[42]=129
    m[43]=134
    m[44]=139
    m[45]=144
    m[46]=149
    m[47]=154
    m[48]=160
    m[49]=166
    m[50]=172
    m[51]=178
    m[52]=182
    m[53]=186
    m[54]=190
    m[55]=194
    m[56]=198
    m[57]=202
    m[58]=206
    m[59]=210
    m[60]=214
    m[61]=218
    m[62]=222
    m[63]=226
    m[64]=230
    m[65]=234
    m[66]=238
    m[67]=242
    m[68]=246
    m[69]=250
    m[70]=254
    m[71]=258
    m[72]=262
    m[73]=266
    m[74]=270
    m[75]=274
    m[76]=278
    m[77]=282
    m[78]=286
    m[79]=290
    m[80]=295
    m[81]=300
    m[82]=305
    m[83]=310
    m[84]=315
    m[85]=320
    m[86]=325
    m[87]=330
    m[88]=335
    m[89]=340
    m[90]=345
    m[91]=350
    m[92]=355
    m[93]=360
    m[94]=365
    m[95]=370
    m[96]=376
    m[97]=382
    m[98]=388
    m[99]=394
    m[100]=400
    m[101]=406
    m[102]=412
    m[103]=418
    m[104]=424
    m[105]=430
    m[106]=436
    m[107]=442
    m[108]=448
    m[109]=454
    m[110]=460
    m[111]=466
    m[112]=473
    m[113]=480
    m[114]=487
    m[115]=494
    m[116]=501
    m[117]=508
    m[118]=515
    m[119]=522
    m[120]=529
    m[121]=536
    m[122]=543
    m[123]=550
    m[124]=555
    m[125]=560
    m[126]=565
    m[127]=570
    m[128]=575
    m[129]=580
    m[130]=585
    m[131]=590
    m[132]=595
    m[133]=600
    m[134]=605
    m[135]=610
    m[136]=615
    m[137]=620
    m[138]=625
    m[139]=630
    m[140]=635
    m[141]=640
    m[142]=645
    m[143]=650
    m[144]=655
    m[145]=660
    m[146]=666
    m[147]=674
    m[148]=680
    m[149]=686
    m[150]=692
    m[151]=698
    m[152]=703
    m[153]=708
    m[154]=713
    m[155]=718
    m[156]=723
    m[157]=728
    m[158]=733
    m[159]=738
    m[160]=743
    m[161]=748
    m[162]=753
    m[163]=758
    m[164]=763
    m[165]=768
    m[166]=773
    m[167]=778
    m[168]=783
    m[169]=788
    m[170]=793
    m[171]=798
    m[172]=803
    m[173]=808
    m[174]=813
    m[175]=818
    m[176]=823
    m[177]=828
    m[178]=833
    m[179]=838
    m[180]=843
    m[181]=848
    m[182]=853
    m[183]=858
    m[184]=863
    m[185]=868
    m[186]=873
    m[187]=878
    m[188]=883
    m[189]=888
    m[190]=893
    m[191]=898
    m[192]=904
    m[193]=910
    m[194]=916
    m[195]=922
    m[196]=928
    m[197]=934
    m[198]=940
    m[199]=946
    m[200]=952
    return m[n]
end
def helper(n)
    dp = Array.new(n + 1){Array.new(n + 1){nil}}
    (1..n).each{
        |v|
        dp[v][v] = 0
    }
    (1..n).each{
        |delta|
        # check [i, i + delta]
        i = 1
        while i + delta <= n
            _i, _j = i, i + delta
            _k = _i
            while _k <= _j
                tmp = _k
                li, lj = _i, _k - 1
                ri, rj = _k + 1, _j
                _d = nil
                if li < lj
                    _d = dp[li][lj]
                end
                if ri < rj
                    if _d == nil || _d < dp[ri][rj]
                        _d = dp[ri][rj]
                    end
                end
                tmp += _d != nil ? _d : 0
                if dp[_i][_j] == nil || tmp < dp[_i][_j]
                    dp[_i][_j] = tmp
                end
                _k += 1
            end
            i += 1
        end
    }

    return dp[1][n]
end
# @lc code=end

if __FILE__ == $0
    # puts "#{get_money_amount 1}"
    (1..200).each{
        |v|
        puts "m[#{v}]=#{get_money_amount v}"
    }
end

