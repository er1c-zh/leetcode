#
# @lc app=leetcode.cn id=310 lang=ruby
#
# [310] 最小高度树
#

# @lc code=start
# @param {Integer} n
# @param {Integer[][]} edges
# @return {Integer[]}
def find_min_height_trees(n, edges)
    debug = false
    map = Array.new(n){Array.new}
    cnt = Array.new(n){0}
    total = n

    edges.each{
        |e|
        x, y = e[0], e[1]
        map[x].append y
        map[y].append x
        cnt[x] += 1
        cnt[y] += 1
    }

    if debug
        map.each_index{
            |x|
            puts "#{x} => #{map[x]}"
        }
    end

    q = []
    cnt.each_index{
        |n|
        if cnt[n] <= 1
            q.append n
            cnt[n] -= 1
        end
    }
    while !q.empty?
        if total <= 2
            return q
        end
        nq = []
        q.each{
            |n|
            total -= 1
            map[n].each{
                |m|
                cnt[m] -= 1
                if cnt[m] == 1
                    nq.append m
                end
            }
        }
        q = nq
    end
    puts "unreachable"
end
# @lc code=end

if __FILE__ == $0
    p find_min_height_trees(1, [])
    p find_min_height_trees(2, [[0, 1]])
    p find_min_height_trees(3, [[0,1],[0,2]])
    p find_min_height_trees(4, [[1,0],[1,2],[1,3]])
    p find_min_height_trees(6, [[3,0],[3,1],[3,2],[3,4],[5,4]])
    p find_min_height_trees(7, [[0,1],[1,2],[1,3],[2,4],[3,5],[4,6]])
    p find_min_height_trees(273, [[0,1],[0,2],[1,3],[3,4],[3,5],[0,6],[5,7],[6,8],[1,9],[6,10],[1,11],[8,12],[5,13],[9,14],[7,15],[14,16],[2,17],[17,18],[5,19],[3,20],[13,21],[0,22],[22,23],[8,24],[20,25],[21,26],[25,27],[3,28],[16,29],[27,30],[22,31],[28,32],[23,33],[7,34],[23,35],[13,36],[21,37],[24,38],[32,39],[3,40],[18,41],[5,42],[24,43],[17,44],[20,45],[7,46],[39,47],[29,48],[2,49],[30,50],[7,51],[25,52],[25,53],[49,54],[11,55],[13,56],[30,57],[4,58],[25,59],[12,60],[32,61],[58,62],[34,63],[28,64],[50,65],[55,66],[23,67],[0,68],[36,69],[46,70],[70,71],[14,72],[44,73],[33,74],[32,75],[18,76],[18,77],[15,78],[21,79],[49,80],[56,81],[36,82],[58,83],[21,84],[73,85],[21,86],[71,87],[15,88],[51,89],[2,90],[1,91],[47,92],[11,93],[58,94],[28,95],[4,96],[54,97],[60,98],[19,99],[75,100],[46,101],[69,102],[75,103],[25,104],[36,105],[50,106],[21,107],[76,108],[2,109],[97,110],[22,111],[39,112],[111,113],[57,114],[12,115],[68,116],[65,117],[48,118],[35,119],[11,120],[61,121],[84,122],[35,123],[105,124],[4,125],[26,126],[85,127],[75,128],[36,129],[92,130],[62,131],[9,132],[98,133],[55,134],[23,135],[64,136],[133,137],[91,138],[69,139],[23,140],[128,141],[6,142],[22,143],[130,144],[133,145],[46,146],[89,147],[95,148],[7,149],[64,150],[81,151],[94,152],[120,153],[78,154],[127,155],[94,156],[16,157],[56,158],[67,159],[75,160],[89,161],[159,162],[122,163],[131,164],[104,165],[98,166],[31,167],[71,168],[142,169],[160,170],[170,171],[55,172],[80,173],[108,174],[103,175],[54,176],[87,177],[173,178],[112,179],[141,180],[122,181],[49,182],[111,183],[51,184],[8,185],[26,186],[34,187],[54,188],[172,189],[179,190],[81,191],[109,192],[162,193],[102,194],[166,195],[169,196],[41,197],[46,198],[28,199],[107,200],[75,201],[2,202],[7,203],[0,204],[124,205],[42,206],[24,207],[120,208],[0,209],[111,210],[190,211],[65,212],[38,213],[75,214],[39,215],[135,216],[21,217],[99,218],[180,219],[57,220],[46,221],[71,222],[144,223],[127,224],[134,225],[207,226],[29,227],[75,228],[30,229],[81,230],[195,231],[23,232],[19,233],[164,234],[205,235],[233,236],[89,237],[18,238],[35,239],[139,240],[206,241],[178,242],[35,243],[190,244],[82,245],[68,246],[225,247],[205,248],[245,249],[231,250],[108,251],[42,252],[112,253],[250,254],[85,255],[196,256],[193,257],[204,258],[139,259],[233,260],[160,261],[1,262],[17,263],[64,264],[253,265],[179,266],[119,267],[251,268],[147,269],[156,270],[9,271],[131,272]])
    p find_min_height_trees(378, [[0,1],[1,2],[0,3],[3,4],[1,5],[0,6],[6,7],[2,8],[5,9],[0,10],[3,11],[3,12],[10,13],[9,14],[4,15],[14,16],[5,17],[10,18],[3,19],[13,20],[6,21],[6,22],[8,23],[20,24],[10,25],[14,26],[23,27],[10,28],[25,29],[28,30],[25,31],[9,32],[18,33],[4,34],[13,35],[11,36],[34,37],[20,38],[25,39],[19,40],[9,41],[9,42],[22,43],[38,44],[1,45],[5,46],[5,47],[13,48],[30,49],[16,50],[10,51],[22,52],[26,53],[39,54],[16,55],[45,56],[3,57],[42,58],[29,59],[50,60],[29,61],[51,62],[0,63],[24,64],[43,65],[57,66],[2,67],[36,68],[58,69],[16,70],[52,71],[16,72],[19,73],[34,74],[20,75],[59,76],[9,77],[43,78],[26,79],[47,80],[58,81],[10,82],[43,83],[79,84],[64,85],[59,86],[6,87],[51,88],[65,89],[71,90],[18,91],[2,92],[27,93],[19,94],[27,95],[50,96],[81,97],[11,98],[18,99],[58,100],[32,101],[67,102],[56,103],[29,104],[53,105],[45,106],[104,107],[7,108],[80,109],[22,110],[33,111],[30,112],[99,113],[41,114],[75,115],[107,116],[90,117],[6,118],[83,119],[27,120],[0,121],[48,122],[72,123],[62,124],[99,125],[67,126],[69,127],[15,128],[110,129],[120,130],[127,131],[73,132],[102,133],[44,134],[130,135],[69,136],[72,137],[110,138],[135,139],[88,140],[80,141],[116,142],[26,143],[14,144],[74,145],[9,146],[127,147],[110,148],[120,149],[113,150],[57,151],[17,152],[42,153],[60,154],[26,155],[102,156],[33,157],[70,158],[13,159],[78,160],[41,161],[16,162],[37,163],[69,164],[131,165],[59,166],[78,167],[69,168],[134,169],[109,170],[122,171],[96,172],[46,173],[30,174],[62,175],[114,176],[111,177],[82,178],[169,179],[177,180],[170,181],[119,182],[138,183],[8,184],[10,185],[126,186],[9,187],[50,188],[36,189],[49,190],[34,191],[72,192],[80,193],[167,194],[193,195],[79,196],[179,197],[95,198],[48,199],[57,200],[17,201],[76,202],[158,203],[78,204],[153,205],[137,206],[9,207],[206,208],[71,209],[62,210],[162,211],[154,212],[4,213],[126,214],[198,215],[149,216],[162,217],[29,218],[24,219],[18,220],[114,221],[170,222],[118,223],[36,224],[201,225],[185,226],[152,227],[193,228],[176,229],[135,230],[118,231],[68,232],[14,233],[79,234],[144,235],[226,236],[171,237],[172,238],[162,239],[72,240],[133,241],[123,242],[54,243],[91,244],[90,245],[219,246],[203,247],[156,248],[149,249],[53,250],[235,251],[83,252],[11,253],[92,254],[191,255],[60,256],[206,257],[4,258],[233,259],[177,260],[176,261],[17,262],[147,263],[155,264],[27,265],[249,266],[144,267],[44,268],[125,269],[42,270],[39,271],[50,272],[64,273],[15,274],[265,275],[75,276],[104,277],[239,278],[108,279],[64,280],[277,281],[179,282],[183,283],[131,284],[129,285],[16,286],[89,287],[149,288],[57,289],[230,290],[34,291],[266,292],[22,293],[41,294],[288,295],[194,296],[237,297],[104,298],[218,299],[152,300],[138,301],[112,302],[62,303],[112,304],[186,305],[37,306],[163,307],[158,308],[196,309],[3,310],[264,311],[294,312],[232,313],[91,314],[56,315],[204,316],[299,317],[221,318],[118,319],[82,320],[295,321],[316,322],[219,323],[124,324],[226,325],[230,326],[316,327],[12,328],[29,329],[114,330],[247,331],[206,332],[183,333],[74,334],[235,335],[280,336],[109,337],[241,338],[245,339],[92,340],[236,341],[210,342],[269,343],[194,344],[306,345],[139,346],[232,347],[313,348],[19,349],[32,350],[39,351],[289,352],[119,353],[306,354],[281,355],[239,356],[235,357],[106,358],[273,359],[334,360],[68,361],[199,362],[215,363],[207,364],[90,365],[49,366],[10,367],[348,368],[47,369],[239,370],[271,371],[349,372],[167,373],[96,374],[48,375],[23,376],[256,377]])
    # p find_min_height_trees()
end
